<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.fresh.mapper.InventoryMapper">
    <resultMap id="inventoryDataMap" type="InventoryData">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="quantity" jdbcType="INTEGER" property="quantity" />
        <result column="product" jdbcType="VARCHAR" property="product" />
        <result column="stock_lot_number" jdbcType="VARCHAR" property="stockLotNumber" />
        <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
        <result column="merchant" jdbcType="VARCHAR" property="merchant" />
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="last_update_time" jdbcType="DATE" property="lastUpdateTime" />
        <result column="version" jdbcType="INTEGER" property="version" />
        <result column="productId" jdbcType="VARCHAR" property="productId"/>
        <result column="warehouseId" jdbcType="VARCHAR" property="warehouseId"/>
        <result column="measure" jdbcType="VARCHAR" property="measure"/>
        <result column="quanitys" jdbcType="INTEGER" property="quanitys"/>
        <result column="unit" jdbcType="VARCHAR" property="unit"/>
        <result column="usable" jdbcType="INTEGER" property="usable"/>
    </resultMap>

    <!--查询总条数-->
    <select id="getTotal" parameterType="InventoryData" resultType="Long">
        select count(*) from inventory_data
        <where>
            <if test="id != null and id != ''">
                and id  = #{id}
            </if>
            <if test="product != null and product != ''">
                and product = #{product}
            </if>
            <if test="warehouse != null and warehouse != ''">
                and warehouse = #{warehouse}
            </if>
        </where>
    </select>
    <!--查询所有  查询产品，仓库-->
    <select id="selAllInventory" parameterType="InventoryData" resultMap="inventoryDataMap">
        <!--SELECT a.ID, a.QUANTITY,  c.NAME product,  a.CREATE_TIME,  a.VERSION, b.NAME warehouse, a.last_update_time
        FROM supplychain.inventory_data a , supplychain.merchant_warehouse_data b,supplychain.product_data c
        WHERE a.WAREHOUSE = b.ID AND a.PRODUCT = c.ID
        <if test="id != null and id != ''">
            and a.ID = #{id}
        </if>
        <if test="product != null and product != ''">
            and a.PRODUCT = #{product}
        </if>
        <if test="warehouse != null and warehouse != ''">
            and a.WAREHOUSE = #{warehouse}
        </if>
        <if test="page != null and size != null">
            LIMIT #{page},#{size}
        </if>-->
        <!--select  distinct tb.* ,scd.QUANTITY quanitys ,tb.quantity-scd.QUANTITY usable from
        (SELECT a.ID, a.QUANTITY quantity,  c.NAME product,  a.CREATE_TIME,  a.VERSION,
                b.NAME warehouse, a.last_update_time,d.NAME unit,c.ID productId
        FROM
        supplychain.inventory_data a ,
        supplychain.merchant_warehouse_data b,
        supplychain.product_data c,
        supplychain.measure_unit_data d
        WHERE
        a.WAREHOUSE = b.ID AND
        a.PRODUCT = c.ID and
        c.MEASURE_UNIT = d.ID
        <if test="id != null and id != ''">
            and a.ID = #{id}
        </if>
        <if test="product != null and product != ''">
            and a.PRODUCT = #{product}
        </if>
        <if test="warehouse != null and warehouse != ''">
            and a.WAREHOUSE = #{warehouse}
        </if>) tb
        left join
        supplychain.stock_change_item_data scd on tb.productId = scd .PRODUCT
        left join
        supplychain.stock_change_data scd2 on scd2.REFERENCE_ID = scd .ID
        <if test="page != null and size != null">
            LIMIT #{page},#{size}
        </if>-->
        SELECT a.id id,a.quanity quantity,a.product product,a.warehouseId,b.warehouseId,
               a.productId,b.productId,
               b.sums quanitys,a.warehouse warehouse,a.create_time create_time,
               a.unit unit,(a.quanity-b.sums) usable
        FROM
        (
            SELECT a.ID id, a.QUANTITY quanity, pd.NAME product,
                   a.WAREHOUSE warehouseId , mwd.NAME warehouse,
                   a.VERSION, mud.NAME unit,a.PRODUCT productId,
                   a.CREATE_TIME create_time
            FROM
                    supplychain.inventory_data a,
                    supplychain.product_data pd ,
                    supplychain.merchant_warehouse_data mwd ,
                    supplychain.measure_unit_data mud
            where
                    a.PRODUCT = pd .ID and
                  a.WAREHOUSE = mwd.ID and
                  pd.MEASURE_UNIT = mud.ID
                <if test="id != null and id != ''">
                    and a.ID = #{id}
                </if>
                <if test="product != null and product != ''">
                    and a.PRODUCT = #{product}
                </if>
                <if test="warehouse != null and warehouse != ''">
                    and a.WAREHOUSE = #{warehouse}
                </if>
        ) a
        LEFT JOIN
        (
            SElECT a.ID,  pd.NAME PRODUCT,a.VERSION,
                   scd.WAREHOUSE warehouseId ,sum(a.QUANTITY) sums ,
                   a.PRODUCT productId
            FROM
                    supplychain.stock_change_item_data a,
                    supplychain.product_data pd ,
                    supplychain.stock_change_data scd
            WHERE
                    a.PRODUCT  = pd.ID AND  scd.REFERENCE_ID = a.ID and a.VERSION = 0 and scd.version != 3
        GROUP BY productId
        ) b
        ON
            a.warehouseId = b.warehouseId AND a.productId = b.productId
        <if test="page != null and size != null">
            LIMIT #{page},#{size}
        </if>
    </select>

    <!--删除库存-->
    <delete id="delInventory" parameterType="String">
        DELETE FROM supplychain.inventory_data
        WHERE ID=#{id};
    </delete>

    <!--修改库存-->
    <update id="updInventory" parameterType="InventoryData">
        UPDATE supplychain.inventory_data
        <set>
            <if test="quantity != null and quantity != ''">
                QUANTITY = #{quantity},
            </if>
            <if test="product != null and product != ''">
                PRODUCT = #{product},
            </if>
            <if test="warehouse != null and warehouse != ''">
                WAREHOUSE = #{warehouse},
            </if>
            LAST_UPDATE_TIME=NOW(),
        </set>
        WHERE ID=#{id}
    </update>

    <!--添加库存-->
    <insert id="addInventory" parameterType="InventoryData">
        INSERT INTO supplychain.inventory_data
        (ID, QUANTITY, PRODUCT,  WAREHOUSE,  CREATE_TIME, LAST_UPDATE_TIME, VERSION)
        VALUES(#{id}, #{quantity}, #{product}, #{warehouse},  now(), now(), 1)
    </insert>

    <!--查询单个库存信息-->
    <select id="selOneInventory" parameterType="String" resultMap="inventoryDataMap">
        SELECT a.ID, a.QUANTITY,  c.NAME product,  a.CREATE_TIME,  a.VERSION, b.NAME warehouse,
               a.last_update_time, c.ID productId,b.ID warehouseId,d.name measure
        FROM supplychain.inventory_data a ,
             supplychain.merchant_warehouse_data b,
             supplychain.product_data c,
             supplychain.MEASURE_UNIT_DATA d
        WHERE
              a.WAREHOUSE = b.ID
          AND a.PRODUCT = c.ID
          AND c.MEASURE_UNIT = d.id
          AND a.ID = #{id}
    </select>

    <!--根据仓库id查询商品库存信息-->
    <select id="selProductByInvent" parameterType="InventoryData" resultMap="inventoryDataMap">
        SELECT a.ID, a.QUANTITY,  c.NAME product,  a.CREATE_TIME,  a.VERSION,
               b.NAME warehouse, a.last_update_time, c.ID productId,b.ID warehouseId
        FROM supplychain.inventory_data a , supplychain.merchant_warehouse_data b,supplychain.product_data c
        WHERE a.WAREHOUSE = b.ID AND a.PRODUCT = c.ID AND c.ID = #{productId} and b.ID &lt;&gt; #{warehouseId}
    </select>

    <!--仓库调拨，根据商品的编号，仓库名称，来修改相应的库存信息  减少库存-->
    <update id="updInventByIds" parameterType="InventoryData" >
        UPDATE supplychain.inventory_data
        <set>
            <if test="quantity != null and quantity != ''">
                QUANTITY = QUANTITY-#{quantity},
            </if>
            LAST_UPDATE_TIME=NOW(),
        </set>
        WHERE  WAREHOUSE = #{warehouse}
            AND PRODUCT = #{product}
    </update>
    <!--添加库存-->
    <update id="addUpdInventByIds" parameterType="InventoryData">
        UPDATE supplychain.inventory_data
        <set>
            <if test="quantity != null and quantity != ''">
                QUANTITY = QUANTITY+#{quantity},
            </if>
            LAST_UPDATE_TIME=NOW(),
        </set>
        WHERE WAREHOUSE = #{warehouse}
        AND PRODUCT = #{product}
    </update>

    <!--添加入库详情单-->
    <insert id="addStockChangeItem" parameterType="StockChangeItemData">
        INSERT INTO supplychain.stock_change_item_data
        (ID, NAME, PRODUCT,  QUANTITY, VERSION)
        VALUES(#{id}, #{name},  #{product}, #{quantity},
               <choose>
                   <when test="version != null and version != '' ">
                       #{version}
                   </when>
                   <otherwise>0</otherwise>
               </choose>
               )
    </insert>

</mapper>